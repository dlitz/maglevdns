#!/usr/bin/env ruby
#--
# MaglevDNS script launcher
# Copyright (c) 2009 Dwayne C. Litzenberger <dlitz@dlitz.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#++

require 'optparse'
require 'maglevdns'

def exit_usage(opts, rc=1)
  puts opts
  exit rc
end

options = {}
opts = OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} [options]"
  opts.separator ""
  opts.separator "Specific options"
  opts.on("--script FILE", "Start a simple script") do |optarg|
    options[:script_filename] = optarg
  end
  opts.on("--listen HOST,PORT", "Listen on the specified host/port combination") do |optarg|
    options[:listeners] = [] if options[:listeners].nil?
    host, port = optarg.split(",")
    options[:listeners] << {:host => host, :port => port}
  end
  opts.on_tail("-h", "--help", "Show this help") do
    exit_usage(opts, 0)
  end
end
opts.parse!
unless ARGV.empty?
  $stderr.puts "#{$0}: error: This program does not accept arguments"
  exit_usage(opts)
end
if options[:listeners].nil?
  $stderr.puts "#{$0}: error: No listeners specified"
  exit_usage(opts)
end
if options[:script_filename].nil?
  $stderr.puts "#{$0}: error: No script specified"
  exit_usage(opts)
end

Thread.abort_on_exception = true
server = MaglevDNS::Server.new(options)
Signal.trap("SIGINT"){ server.request_stop }
server.start
server.join

# vim:set ts=2 sw=2 sts=2 expandtab:
